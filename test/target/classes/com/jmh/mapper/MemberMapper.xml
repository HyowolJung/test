<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jmh.mapper.MemberMapper">
	
<!-- SELECT
    MEMBER_ID,
    NVL(MEMBER_NAME, '(미정)') AS MEMBER_NAME,
    CASE
        WHEN MEMBER_GN = 'G01' THEN '남자'
        WHEN MEMBER_GN = 'G02' THEN '여자'
        ELSE '(미정)'
    END AS MEMBER_GN,
    MEMBER_IMG,
    NVL(MEMBER_EMAIL, '(미정)') AS MEMBER_EMAIL,
    NVL(MEMBER_TEL, '(미정)') AS MEMBER_TEL,
    NVL(MEMBER_ADR, '(미정)') AS MEMBER_ADR,
    MEMBER_STDAY,
    MEMBER_LADAY,
    CASE
        WHEN MEMBER_LADAY IS NULL THEN '재직'
        WHEN MEMBER_ST = 'S02' THEN '파견'
        WHEN MEMBER_ST = 'S03' THEN '휴가'
        WHEN MEMBER_ST = 'S04' THEN '병가'
        WHEN MEMBER_LADAY IS NOT NULL THEN '퇴사'
        ELSE '(미정)'
    END AS MEMBER_ST,
    CASE
        WHEN MEMBER_POS = 'P16' THEN '인턴'
        WHEN MEMBER_POS = 'P15' THEN '사원'
        WHEN MEMBER_POS = 'P14' THEN '주임'
        WHEN MEMBER_POS = 'P13' THEN '대리'
        WHEN MEMBER_POS = 'P12' THEN '과장'
        WHEN MEMBER_POS = 'P11' THEN '차장'
        WHEN MEMBER_POS = 'P10' THEN '부장'
        WHEN MEMBER_POS = 'P09' THEN '팀장'
        WHEN MEMBER_POS = 'P08' THEN '실장'
        WHEN MEMBER_POS = 'P07' THEN '본부장'
        WHEN MEMBER_POS = 'P06' THEN '상무'
        WHEN MEMBER_POS = 'P05' THEN '전무'
        WHEN MEMBER_POS = 'P04' THEN '부사장'
        WHEN MEMBER_POS = 'P03' THEN '사장'
        WHEN MEMBER_POS = 'P02' THEN '부회장'
        WHEN MEMBER_POS = 'P01' THEN '회장'
        ELSE '(미정)'
    END AS MEMBER_POS,
    CASE
        WHEN MEMBER_DEPT = 'D01' THEN '경영지원부'
        WHEN MEMBER_DEPT = 'D02' THEN '인사부'
        WHEN MEMBER_DEPT = 'D03' THEN 'IT부'
        WHEN MEMBER_DEPT = 'D04' THEN '재무부'
        WHEN MEMBER_DEPT = 'D05' THEN '회계부'
        WHEN MEMBER_DEPT = 'D06' THEN '마케팅부'
        ELSE '(미정)'
    END AS MEMBER_DEPT,
    MEMBER_TEAM,
    MEMBER_AUTH
FROM
        	MEMBER_DETAIL
WHERE 
			MEMBER_ID = #{member_Id} -->

<resultMap type="com.jmh.dto.MemberDto" id="memberMap">
	<result property="memberId" column="MEMBER_ID"/>
	<result property="memberPw" column="MEMBER_PW"/>
	<result property="memberGn" column="MEMBER_GN"/>
	<result property="memberName" column="MEMBER_NAME"/>
	<result property="memberEmail" column="MEMBER_EMAIL"/>
	<result property="memberTel" column="MEMBER_TEL"/>
	<result property="memberSt" column="MEMBER_ST"/>
	<result property="memberPos" column="MEMBER_POS"/>
	<result property="memberDept" column="MEMBER_DEPT"/>
	<result property="memberTeam" column="MEMBER_TEAM"/>
	<result property="memberAuth" column="MEMBER_AUTH"/>
	<result property="memberStDay" column="MEMBER_STDAY"/>
	<result property="memberLaDay" column="MEMBER_LADAY"/>
	<result property="memberRo" column="MEMBER_RO"/>
</resultMap>

<!-- <resultMap type="com.jmh.security.CustomUserDetails" id="securityMap">
	<result property="memberId" column="MEMBER_ID"/>
	<result property="memberPw" column="MEMBER_PW"/>
	<result property="memberName" column="MEMBER_NAME"/>
	<result property="memberDept" column="MEMBER_DEPT"/>
	<result property="memberAuth" column="MEMBER_AUTH"/>
</resultMap> -->

<!-- 1. 조회 -->
<select id="getMemberList" resultType="com.jmh.dto.MemberDto"   resultMap="memberMap" parameterType="com.jmh.dto.Criteria"><!-- parameterType="String" -->
/*getmemberList*/
SELECT
    MD.MEMBER_ID,
    NVL(MD.MEMBER_NAME, '(미정)') AS MEMBER_NAME,
    NVL(GN.DTLCODENM, '(미정)') AS MEMBER_GN,
    MD.MEMBER_IMG,
    NVL(MD.MEMBER_EMAIL, '(미정)') AS MEMBER_EMAIL,
    NVL(MD.MEMBER_TEL, '(미정)') AS MEMBER_TEL,
    NVL(MD.MEMBER_ADR, '(미정)') AS MEMBER_ADR,
    MD.MEMBER_STDAY,
    MD.MEMBER_LADAY,
    NVL(ST.DTLCODENM, '(미정)') AS MEMBER_ST,
    NVL(POS.DTLCODENM, '(미정)') AS MEMBER_POS,
    NVL(DEPT.DTLCODENM, '(미정)') AS MEMBER_DEPT,
    MD.MEMBER_TEAM,
    MD.MEMBER_AUTH,
    NVL(RO.DTLCODENM, '(미정)') AS MEMBER_RO
FROM (
	SELECT   
		MEMBER_ID,
		MEMBER_PW,
		MEMBER_NAME,
		MEMBER_GN,
		MEMBER_IMG,
		MEMBER_EMAIL,
		MEMBER_TEL,
		MEMBER_ADR,
		MEMBER_STDAY,
		MEMBER_LADAY,
		MEMBER_ST,
		MEMBER_POS,
		MEMBER_DEPT,
		MEMBER_TEAM,
		MEMBER_AUTH,
		MEMBER_RO,
		<!-- ROW_NUMBER() OVER (ORDER BY MEMBER_ID DESC) AS NUMROW, -->
		ROW_NUMBER() OVER (
    	ORDER BY 
    	CASE 
        	WHEN #{choiceValue} = 'IdUp' THEN MEMBER_ID
        	WHEN #{choiceValue} = 'DeptDown' THEN SUBSTR(MEMBER_POS, 3, 2)
    		<!-- 
    			WHEN #{choiceValue} = 'RecentStDay' THEN MEMBER_STDAY 
    			MEMBER_STDAY 위에 있는 거랑 타입이 달라서 함께 쓰면 에러가 남.. 
    			ORA-00932: 일관성 없는 데이터 유형: CHAR이(가) 필요하지만 DATE
    		-->
    	END 
    	DESC
    	, 
    	CASE 
        	WHEN #{choiceValue} = 'IdDown' THEN MEMBER_ID
        	WHEN #{choiceValue} = 'DeptUp' THEN SUBSTR(MEMBER_POS, 3, 2)
    	END
    	ASC
    	,
    	CASE 
        	WHEN #{choiceValue} = 'RecentStDay' THEN MEMBER_STDAY
    	END DESC
    	)AS NUMROW,
		COUNT(*) OVER() AS TOTAL_CNT
	FROM     
			MEMBER_DETAIL
)MD
LEFT JOIN 
    CODE_DETAIL GN 
ON 
    TO_NUMBER(SUBSTR(MD.MEMBER_GN, -1)) = GN.DTLCODE 
AND 
	GN.DCODE = 'D100'
	
LEFT JOIN
	CODE_DETAIL POS
ON
	 TO_NUMBER(SUBSTR(MD.MEMBER_POS, -2, 2)) = POS.DTLCODE
AND
	POS.DCODE = 'D200'

LEFT JOIN
	CODE_DETAIL DEPT
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_DEPT, -1)) = DEPT.DTLCODE
AND
	DEPT.DCODE = 'D300'

LEFT JOIN
	CODE_DETAIL ST
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_ST, -1)) = ST.DTLCODE
AND
	ST.DCODE = 'D400'

LEFT JOIN
	CODE_DETAIL RO
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_RO, -1)) = RO.DTLCODE
AND
	RO.DCODE = 'D500'
WHERE 
		NUMROW BETWEEN #{startNo} AND #{endNo}
</select>

<!-- 1. 조회(페이징 정보) -->
<select id="getTotalCnt" resultType="integer"  parameterType="integer">
	/*getTotalCnt*/		
	<if test="searchWord == null and searchStDay == null and searchLaDay == null">
	SELECT 
			COUNT(*) 
	FROM 
			MEMBER_DETAIL
	</if>
	
	<if test="searchWord != null or searchStDay != null or searchLaDay != null">
	SELECT 
			COUNT(*) 
	FROM 
			MEMBER_DETAIL
	<include refid="criteria"></include>
	</if>	
	
</select>

<select id="searchMemberList" resultType="com.jmh.dto.MemberDto"   resultMap="memberMap"><!-- parameterType="String" -->
/*searchMemberList*/
SELECT
    MD.MEMBER_ID,
    NVL(MD.MEMBER_NAME, '(미정)') AS MEMBER_NAME,
    NVL(GN.DTLCODENM, '(미정)') AS MEMBER_GN,
    MD.MEMBER_IMG,
    NVL(MD.MEMBER_EMAIL, '(미정)') AS MEMBER_EMAIL,
    NVL(MD.MEMBER_TEL, '(미정)') AS MEMBER_TEL,
    NVL(MD.MEMBER_ADR, '(미정)') AS MEMBER_ADR,
    MD.MEMBER_STDAY,
    MD.MEMBER_LADAY,
    NVL(ST.DTLCODENM, '(미정)') AS MEMBER_ST,
    NVL(POS.DTLCODENM, '(미정)') AS MEMBER_POS,
    NVL(DEPT.DTLCODENM, '(미정)') AS MEMBER_DEPT,
    MD.MEMBER_TEAM,
    MD.MEMBER_AUTH,
    NVL(RO.DTLCODENM, '(미정)') AS MEMBER_RO
FROM (
	SELECT   
		MEMBER_ID,
		MEMBER_PW,
		MEMBER_NAME,
		MEMBER_GN,
		MEMBER_IMG,
		MEMBER_EMAIL,
		MEMBER_TEL,
		MEMBER_ADR,
		MEMBER_STDAY,
		MEMBER_LADAY,
		MEMBER_ST,
		MEMBER_POS,
		MEMBER_DEPT,
		MEMBER_TEAM,
		MEMBER_AUTH,
		MEMBER_RO,
		ROW_NUMBER() OVER (ORDER BY MEMBER_ID DESC) AS NUMROW,
		COUNT(*) OVER() AS TOTAL_CNT
	FROM     
			MEMBER_DETAIL
	<include refid="criteria"></include> 
)MD
LEFT JOIN 
    CODE_DETAIL GN 
ON 
    TO_NUMBER(SUBSTR(MD.MEMBER_GN, -1)) = GN.DTLCODE 
AND 
	GN.DCODE = 'D100'
	
LEFT JOIN
	CODE_DETAIL POS
ON
	 TO_NUMBER(SUBSTR(MD.MEMBER_POS, -2, 2)) = POS.DTLCODE
AND
	POS.DCODE = 'D200'

LEFT JOIN
	CODE_DETAIL DEPT
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_DEPT, -1)) = DEPT.DTLCODE
AND
	DEPT.DCODE = 'D300'

LEFT JOIN
	CODE_DETAIL ST
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_ST, -1)) = ST.DTLCODE
AND
	ST.DCODE = 'D400'

LEFT JOIN
	CODE_DETAIL RO
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_RO, -1)) = RO.DTLCODE
AND
	RO.DCODE = 'D500'
WHERE 
		NUMROW BETWEEN #{startNo} AND #{endNo}
</select>

<!-- 3. 체크된 데이터 가져오기-->
<select id="getSelectedList" resultType="String" parameterType="java.util.List" resultMap="memberMap">
/*getSelectedList*/
SELECT
    MD.MEMBER_ID,
    NVL(MD.MEMBER_NAME, '(미정)') AS MEMBER_NAME,
    NVL(GN.DTLCODENM, '(미정)') AS MEMBER_GN,
    MD.MEMBER_IMG,
    NVL(MD.MEMBER_EMAIL, '(미정)') AS MEMBER_EMAIL,
    NVL(MD.MEMBER_TEL, '(미정)') AS MEMBER_TEL,
    NVL(MD.MEMBER_ADR, '(미정)') AS MEMBER_ADR,
    MD.MEMBER_STDAY,
    MD.MEMBER_LADAY,
    NVL(ST.DTLCODENM, '(미정)') AS MEMBER_ST,
    NVL(POS.DTLCODENM, '(미정)') AS MEMBER_POS,
    NVL(DEPT.DTLCODENM, '(미정)') AS MEMBER_DEPT,
    MD.MEMBER_TEAM,
    MD.MEMBER_AUTH,
    NVL(RO.DTLCODENM, '(미정)') AS MEMBER_RO
FROM (
	SELECT   
		MEMBER_ID,
		MEMBER_PW,
		MEMBER_NAME,
		MEMBER_GN,
		MEMBER_IMG,
		MEMBER_EMAIL,
		MEMBER_TEL,
		MEMBER_ADR,
		MEMBER_STDAY,
		MEMBER_LADAY,
		MEMBER_ST,
		MEMBER_POS,
		MEMBER_DEPT,
		MEMBER_TEAM,
		MEMBER_AUTH,
		MEMBER_RO,
		ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW ,
		COUNT(*) OVER() AS TOTAL_CNT
	FROM     
			MEMBER_DETAIL
	<!-- <include refid="criteria"></include> -->  
)MD
LEFT JOIN 
    CODE_DETAIL GN 
ON 
    TO_NUMBER(SUBSTR(MD.MEMBER_GN, -1)) = GN.DTLCODE 
AND 
	GN.DCODE = 'D100'
	
LEFT JOIN
	CODE_DETAIL POS
ON
	 TO_NUMBER(SUBSTR(MD.MEMBER_POS, -2, 2)) = POS.DTLCODE
AND
	POS.DCODE = 'D200'

LEFT JOIN
	CODE_DETAIL DEPT
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_DEPT, -1)) = DEPT.DTLCODE
AND
	DEPT.DCODE = 'D300'

LEFT JOIN
	CODE_DETAIL ST
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_ST, -1)) = ST.DTLCODE
AND
	ST.DCODE = 'D400'

LEFT JOIN
	CODE_DETAIL RO
ON
	TO_NUMBER(SUBSTR(MD.MEMBER_RO, -1)) = RO.DTLCODE
AND
	RO.DCODE = 'D500'
	 	
<!-- LEFT JOIN
	CODE_DETAIL AU
ON
	MD.MEMBER_AUTH = AU.DTLCODE
	TO_NUMBER(SUBSTR(MD.MEMBER_AUTH, -1)) = AU.DTLCODE
AND
	AU.DCODE = 'D600'		 -->
WHERE
	MD.MEMBER_ID IN
 	<foreach item="memberId" collection="list" open="(" separator="," close=")">
		 #{memberId}
	</foreach>
</select>

<!-- 3. 체크된 데이터 수정 -->
<update id="modifyMember" parameterType="java.util.Map" >
		<foreach item="member" index="index" collection="list" separator=";"  open="DECLARE BEGIN" close=";END;">
        UPDATE 
        	MEMBER_DETAIL
        SET
            MEMBER_NAME = #{member.memberName},
            MEMBER_GN = #{member.memberGn},
            MEMBER_DEPT = #{member.memberDept},
            MEMBER_RO = #{member.memberRo},
            MEMBER_TEL = #{member.memberTel},
            MEMBER_POS = #{member.memberPos},
            MEMBER_STDAY = #{member.memberStDay},
            MEMBER_ST = #{member.memberSt}
           <if test="member.memberLaDay != null">
        		MEMBER_LADAY = #{member.memberLaDay}
        	</if>
        WHERE
            MEMBER_ID = #{member.memberId}
    </foreach>
</update> 

<!-- 3. 수정(전화번호가 내 번호인지) -->
<select id="isMyMemberTel" resultType="integer">
    SELECT COUNT(*)
    FROM MEMBER_DETAIL
    <where>
        <foreach item="item" index="index" collection="list" open="(" separator="OR" close=")">
            MEMBER_TEL = #{item.memberTel} AND member_Id = #{item.memberId}
        </foreach>
    </where>
</select>

<!-- 3. 수정(전화번호 중복되는지) -->
<select id="isDupliMemberTel" resultType="integer">
    SELECT COUNT(*)
    FROM MEMBER_DETAIL
    <where>
        <foreach item="item" index="index" collection="list" open="(" separator="OR" close=")">
            MEMBER_TEL = #{item.memberTel}
        </foreach>
    </where>
</select>

<!-- 4. 삭제(회원 정보 삭제) -->
<delete id="deleteMember" parameterType="list" >
/*deleteMember*/
	DELETE 
	FROM
			MEMBER_DETAIL
	WHERE 
			MEMBER_ID 
	IN
	<foreach item="memberId" collection="list" open="(" separator="," close=")">
		#{memberId}
	</foreach>
</delete>

<!-- 2. 등록(회원 등록) -->
<insert id="insertMember" parameterType="com.jmh.dto.MemberDto">
	/*insertMember*/
	INSERT
	INTO
	MEMBER_DETAIL
	(
	MEMBER_ID,
	MEMBER_PW,
	MEMBER_NAME,
	MEMBER_GN,
	MEMBER_POS,
	MEMBER_DEPT,
	MEMBER_TEL,
	MEMBER_STDAY,
	MEMBER_AUTH
	)
	VALUES
	(
	#{memberId},
	#{memberPw},
	#{memberName},
	#{memberGn},
	#{memberPos},
	#{memberDept},
	#{memberTel},
	#{memberStDay},
	#{memberAuth}
	)
</insert>

<!-- 2. 등록(아이디 체크) -->
<select id="isDupliMemberId" resultType="integer"><!-- parameterType="String" -->
/*checkId*/
SELECT 
		COUNT(*)
FROM 
		MEMBER_DETAIL 
WHERE 
		<foreach item="item" index="index" collection="list" open="(" separator="OR" close=")">
		MEMBER_ID = #{item.memberId}
		</foreach>
</select>
































<!-- 0. 로그인 -->
<select id="loginID"  resultType="com.jmh.dto.MemberDto" > <!-- resultType="com.jmh.security.CustomUserDetails"  resultMap="securityMap"-->
SELECT 
		MEMBER_ID, 
		MEMBER_PW, 
		MEMBER_NAME, 
		MEMBER_AUTH
		<!-- MEMBER_ENABLED --> 
FROM 
		MEMBER_DETAIL 
WHERE 
		MEMBER_ID=#{memberId}
</select>








<!-- 2. 등록(전화번호 체크) -->
<select id="checkTel" resultType="boolean"><!-- parameterType="String" -->
/*checkTel*/
SELECT 
		COUNT(*)
FROM 
		MEMBER_DETAIL 
WHERE 
		MEMBER_TEL = #{memberTel}
</select>




<!-- 사번을 클릭했을 때 -->
<!-- 3. 수정(페이지 이동 + 회원 정보 조회) -->
<select id="selectModifyList" resultType="com.jmh.dto.MemberDto" parameterType="integer" resultMap="memberMap">
SELECT
    MD.MEMBER_ID,
    NVL(MD.MEMBER_NAME, '미정') AS MEMBER_NAME,
    GN.DTLCODENM AS MEMBER_GN,
    MD.MEMBER_IMG,
    NVL(MD.MEMBER_EMAIL,'(미정)') AS MEMBER_EMAIL,
    NVL(MD.MEMBER_TEL, '(미정)') AS MEMBER_TEL,
    NVL(MD.MEMBER_ADR, '(미정)') AS MEMBER_ADR,
    MD.MEMBER_STDAY,
    MD.MEMBER_LADAY,
    ST.DTLCODENM AS MEMBER_ST,
    POS.DTLCODENM AS MEMBER_POS,
    DEPT.DTLCODENM AS MEMBER_DEPT,
    MD.MEMBER_TEAM,
    MD.MEMBER_AUTH,
    NVL(RO.DTLCODENM, '(미정)') AS MEMBER_RO
FROM 
	MEMBER_DETAIL MD
LEFT JOIN 
	CODE_DETAIL GN 
ON 
	MD.MEMBER_GN = GN.DTLCODE 
AND 
	GN.DCODE = 'D010'
LEFT JOIN 
	CODE_DETAIL POS 
ON 
	MD.MEMBER_POS = POS.DTLCODE 
AND 
	POS.DCODE = 'D020'
LEFT JOIN 
	CODE_DETAIL DEPT 
ON 
	MD.MEMBER_DEPT = DEPT.DTLCODE 
AND 
	DEPT.DCODE = 'D030'
LEFT JOIN 
	CODE_DETAIL ST 
ON 
	MD.MEMBER_ST = ST.DTLCODE 
AND 
	ST.DCODE = 'D040' 
WHERE 
	MEMBER_ID = #{memberId}
</select>



















<select id="getmemberprojectList" resultType="map" parameterType="int">
/*getmemberprojectList*/
SELECT
   		P.PROJECT_ID,
   		P.PROJECT_NAME,
   		TO_CHAR(PUSHDATE, 'YYYY-MM-DD') AS PUSHDATE,
   		TO_CHAR(PULLDATE, 'YYYY-MM-DD') AS PULLDATE
FROM 
		PROJECT P
JOIN
		PROJECT_DETAIL PD
ON
		P.PROJECT_ID = PD.PROJECT_ID
JOIN
       	MEMBER M
ON
       	M.MEMBER_ID = PD.MEMBER_ID
WHERE
       	PD.MEMBER_ID = #{member_Id}
</select>















<select id="getDept" resultType="com.jmh.dto.MemberDto"  resultMap="memberMap">
	SELECT 
			MEMBER_ID
			<!-- CASE
				WHEN MEMBER_DEPARTMENT = 'NULL' THEN '미정'
				WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
				WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
				WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
				WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
				ELSE '미정' 
			END
			AS MEMBER_DEPARTMENT -->
	FROM 
				MEMBER 
	WHERE 
				MEMBER_ID = #{member_Id}
</select>

<select id="read" resultMap="memberMap" >
SELECT 
		MEMBER_ID, 
		MEMBER_PW, 
		MEMBER_NAME, 
		MEMBER_AUTHORITY
		<!-- MEMBER_ENABLED  -->
FROM 
		MEMBER_DETAIL 
WHERE 
		MEMBER_ID=#{member_Id}
</select>

<!-- <select id="loginID" resultType="com.jmh.security.CustomUserDetails">
	select * from CUSTOMMEMBER where ID='human'
</select> -->

<select id="loginCk" resultType="com.jmh.dto.MemberDto">
  SELECT 
		MEMBER_ID
		,CASE
          	WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
            WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
            WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
            WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
          END AS MEMBER_DEPARTMENT
        ,MEMBER_PW
  FROM 
  		MEMBER
  WHERE 
  		MEMBER_ID=#{member_Id} AND MEMBER_PW=#{member_Pw_ck}
</select>
	
	
<!-- NVL(P.PROJECT_ENDDATE, '1900-01-01') AS PROJECT_ENDDATE	 -->
<!-- 1. 조회(검색어 X) -->
<!-- <select id="getmemberList" resultType="com.jmh.dto.MemberDto">
/*getmemberList*/
SELECT 
		MEMBER_ID ,
		MEMBER_NAME ,
		NVL(
		CASE
			WHEN MEMBER_SEX = 'NULL' THEN '미정'
			WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
		END, 
		'미정')
		AS MEMBER_SEX ,
		CASE
			WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
            ELSE '미정' 
		END 
		AS MEMBER_SEX ,
		NVL(
		CASE
			WHEN MEMBER_POSITION = 'NULL' THEN '미정'
			WHEN MEMBER_POSITION = 'D028' THEN '사원'
			WHEN MEMBER_POSITION = 'D027' THEN '대리'
			WHEN MEMBER_POSITION = 'D026' THEN '과장'
			WHEN MEMBER_POSITION = 'D025' THEN '차장'
			WHEN MEMBER_POSITION = 'D024' THEN '부장'
			WHEN MEMBER_POSITION = 'D023' THEN '이사'
			WHEN MEMBER_POSITION = 'D022' THEN '상무'
			WHEN MEMBER_POSITION = 'D021' THEN '사장'
		END, 
		'미정')
		AS MEMBER_POSITION ,
		NVL(
		CASE
			WHEN MEMBER_DEPARTMENT = 'NULL' THEN '미정'
			WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
            WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
            WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
            WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
		END, 
		'미정')
		AS MEMBER_DEPARTMENT ,
        MEMBER_TEL ,
        NVL(
		CASE
			WHEN MEMBER_SKILL_LANGUAGE = 'NULL' THEN '미정'
			WHEN MEMBER_SKILL_LANGUAGE = 'S010' THEN 'JAVA'
			WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
			WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
			WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
		END, 
		'미정')
		AS MEMBER_SKILL_LANGUAGE ,
		NVL(
		CASE
			WHEN MEMBER_SKILL_DB = 'NULL' THEN '미정'
			WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
			WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
			WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
			WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
		END,
		'미정')
		AS MEMBER_SKILL_DB ,
		MEMBER_STARTDATE ,
		MEMBER_ENDDATE ,
		NVL(
		CASE
			WHEN MEMBER_STATUS = 'S01' THEN '대기중'
			WHEN MEMBER_STATUS = 'S02' THEN '파견중'
			WHEN MEMBER_STATUS = 'S03' THEN '휴가중'
			WHEN MEMBER_STATUS = 'S04' THEN '퇴사'
			WHEN MEMBER_STATUS = 'NULL' THEN '대기중'
			WHEN MEMBER_STATUS = '' THEN '대기중'
		END, 
		'미정')
		AS MEMBER_STATUS
FROM   
		(
			SELECT   
					MEMBER_ID ,
					MEMBER_NAME ,
					MEMBER_SEX ,
					MEMBER_POSITION ,
					MEMBER_DEPARTMENT ,
					MEMBER_TEL ,
					MEMBER_SKILL_LANGUAGE ,
					MEMBER_SKILL_DB ,
					MEMBER_STARTDATE ,
					MEMBER_ENDDATE ,
					MEMBER_STATUS ,
					ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW ,
					COUNT(*) OVER() AS TOTAL_CNT
			FROM     
					MEMBER 
		)
	
WHERE 
		NUMROW BETWEEN #{startNo} AND #{endNo}
</select> -->
	
<!-- 1. 조회(검색어 O) -->
<!-- <select id="searchmemberList" resultType="com.jmh.dto.MemberDto"> --><!-- parameterType="com.jmh.vo.memberVO" -->
<!-- /*searchmemberList*/ -->
<!-- SELECT MEMBER_ID ,
       MEMBER_NAME ,
       NVL(
       CASE
			WHEN MEMBER_SEX = 'NULL' THEN '미정'
            WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
       END, 
       '미정')
       AS MEMBER_SEX ,
       NVL(
       CASE
       		WHEN MEMBER_POSITION = 'NULL' THEN '미정'
            WHEN MEMBER_POSITION = 'D028' THEN '사원'
            WHEN MEMBER_POSITION = 'D027' THEN '대리'
            WHEN MEMBER_POSITION = 'D026' THEN '과장'
            WHEN MEMBER_POSITION = 'D025' THEN '차장'
            WHEN MEMBER_POSITION = 'D024' THEN '부장'
            WHEN MEMBER_POSITION = 'D023' THEN '이사'
            WHEN MEMBER_POSITION = 'D022' THEN '상무'
            WHEN MEMBER_POSITION = 'D021' THEN '사장'
       END, 
       '미정')
       AS MEMBER_POSITION ,
       NVL(
       CASE
       		WHEN MEMBER_DEPARTMENT = 'NULL' THEN '미정'
			WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
            WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
            WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
            WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
       END, 
       '미정')
       AS MEMBER_DEPARTMENT ,
       MEMBER_TEL ,
       NVL(
       CASE
			WHEN MEMBER_SKILL_LANGUAGE = 'NULL' THEN '미정'
            WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
            WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
            WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
       END, 
       '미정')
       AS MEMBER_SKILL_LANGUAGE ,
       NVL(
       CASE
       		WHEN MEMBER_SKILL_DB = 'NULL' THEN '미정'
            WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
            WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
            WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
            WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
       END, 
       '미정')
       AS MEMBER_SKILL_DB ,
       MEMBER_STARTDATE ,
       MEMBER_ENDDATE ,
       NVL(
       CASE
       		
            WHEN MEMBER_STATUS = 'S01' THEN '대기중'
            WHEN MEMBER_STATUS = 'S02' THEN '파견중'
            WHEN MEMBER_STATUS = 'S03' THEN '휴가중'
            WHEN MEMBER_STATUS = 'S04' THEN '퇴사'
       END,
       '미정')
       AS MEMBER_STATUS
FROM   (
                SELECT   MEMBER_ID ,
                         MEMBER_NAME ,
                         MEMBER_SEX ,
                         MEMBER_POSITION ,
                         MEMBER_DEPARTMENT ,
                         MEMBER_TEL ,
                         MEMBER_SKILL_LANGUAGE ,
                         MEMBER_SKILL_DB ,
                         MEMBER_STARTDATE ,
                         MEMBER_ENDDATE ,
                         MEMBER_STATUS ,
                         ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW ,
                         COUNT(*) OVER()                            AS TOTAL_CNT
                FROM     MEMBER 
<include refid="criteria"></include> 
        )
WHERE NUMROW BETWEEN #{startNo} AND #{endNo} -->
<!-- </select> -->
	

	

<!-- 로그인할때 암호화된 비밀번호 가져오기(입력한 비밀번호랑 비교할 수 있도록) -->		
<select id="getmember_Pw" resultType="String">
	SELECT MEMBER_PW FROM MEMBER WHERE MEMBER_ID = #{member_Id}
</select>		
		

	
<!-- 3. 수정(페이지 이동 + 회원 정보 조회) -->
<select id="getModifyList" resultType="com.jmh.dto.MemberDto" parameterType="integer">
SELECT 
		MEMBER_ID ,
		MEMBER_NAME ,
		NVL(
		CASE
				WHEN MEMBER_SEX = 'NULL' THEN '미정'
				WHEN MEMBER_SEX = 'D011' THEN '남자'
            	WHEN MEMBER_SEX = 'D012' THEN '여자'
		END, 
		'미정')
		AS MEMBER_SEX ,
		NVL(
        CASE
				WHEN MEMBER_POSITION = 'NULL' THEN '미정'
            	WHEN MEMBER_POSITION = 'D028' THEN '사원'
            	WHEN MEMBER_POSITION = 'D027' THEN '대리'
            	WHEN MEMBER_POSITION = 'D026' THEN '과장'
            	WHEN MEMBER_POSITION = 'D025' THEN '차장'
            	WHEN MEMBER_POSITION = 'D024' THEN '부장'
            	WHEN MEMBER_POSITION = 'D023' THEN '이사'
            	WHEN MEMBER_POSITION = 'D022' THEN '상무'
            	WHEN MEMBER_POSITION = 'D021' THEN '사장'
		END,
		'미정')
		AS MEMBER_POSITION ,
		NVL(
		CASE
			WHEN MEMBER_DEPARTMENT = 'NULL' THEN '미정'
			WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
            WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
            WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
            WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
		END, 
		'미정')
		AS MEMBER_DEPARTMENT ,
		MEMBER_TEL ,
		NVL(
		CASE
			WHEN MEMBER_SKILL_LANGUAGE = 'NULL' THEN '미정'
            WHEN MEMBER_SKILL_LANGUAGE = 'S010' THEN 'JAVA'
            WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
            WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
            WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
		END, 
		'미정')
		AS MEMBER_SKILL_LANGUAGE ,
        NVL(
        CASE
        	WHEN MEMBER_SKILL_DB = 'NULL' THEN '미정'
            WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
            WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
            WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
            WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
		END, 
		'미정')
		AS MEMBER_SKILL_DB ,
		MEMBER_STARTDATE ,
		<!-- ,NVL(MEMBER_ENDDATE,'1900-01-01') AS MEMBER_ENDDATE  -->
		MEMBER_ENDDATE
FROM 
		MEMBER
WHERE 
		MEMBER_ID = #{member_Id}
</select>
	
<!-- 3. 수정(전화번호 중복체크) -->
<select id="member_Tel_ck" resultType="integer" parameterType="List"> <!-- parameterType="String"  -->
SELECT
		COUNT(*)
FROM
		MEMBER
WHERE 
		MEMBER_TEL = #{member_Tel} and member_Id = #{member_Id}
</select>



<!-- <select id="checkMember" resultType="integer" parameterType="List"> parameterType="String" 
SELECT
		COUNT(*)
FROM
		MEMBER
WHERE 
		MEMBER_TEL = #{memberTel} and member_Id = #{memberId}
</select> -->

	
<!-- 3. 수정(회원 정보 수정) -->
<update id="memberModify" parameterType="com.jmh.dto.MemberDto">
	<if test="member_endDate != null">
	UPDATE 
			MEMBER 
	SET 
			MEMBER_NAME = #{member_Name}
			,MEMBER_SEX = #{member_Sex}
			,MEMBER_POSITION = #{member_Position}
			,MEMBER_DEPARTMENT = #{member_Department}
			,MEMBER_TEL = #{member_Tel} 
			,MEMBER_SKILL_LANGUAGE = #{member_Skill_Language} 
			,MEMBER_SKILL_DB = #{member_Skill_DB} 
			,MEMBER_STARTDATE = #{member_startDate}
			,MEMBER_ENDDATE = #{member_endDate}
			,MEMBER_STATUS = 'S04'
	WHERE 
			MEMBER_ID = #{member_Id}
	</if>
	
	<if test="member_endDate == null">
	UPDATE 
			MEMBER 
	SET 
			MEMBER_NAME = #{member_Name}
			,MEMBER_SEX = #{member_Sex}
			,MEMBER_POSITION = #{member_Position}
			,MEMBER_DEPARTMENT = #{member_Department}
			,MEMBER_TEL = #{member_Tel} 
			,MEMBER_SKILL_LANGUAGE = #{member_Skill_Language} 
			,MEMBER_SKILL_DB = #{member_Skill_DB} 
			,MEMBER_STARTDATE = #{member_startDate}
			,MEMBER_ENDDATE = NULL
	WHERE 
			MEMBER_ID = #{member_Id}
	</if>
</update>

<!-- <select id="member_Tel_ck_M" resultType="integer" parameterType="List"> parameterType="String" 
SELECT
		COUNT(*)
FROM
		MEMBER
WHERE 
		MEMBER_TEL = #{member_Tel} and member_Id = #{member_Id}
</select> -->



<update id="memberModify2" parameterType="java.util.Map">
	<foreach item="member" index="index" collection="selectedProjectData" open="DECLARE BEGIN" separator=";" close="; END;">
	
	UPDATE 
   		PROJECT_DETAIL
   	SET
		PUSHDATE = #{member.pushDate},
		PULLDATE = #{member.pullDate}
	WHERE 
		MEMBER_ID = #{member.member_Id}
	AND
		PROJECT_ID = #{member.project_Id}
	
	</foreach>
</update>

<select id="member_Tel_ck_M" resultType="String" parameterType="java.util.List">
    <foreach item="member" index="index" collection="modifyList" open="(" separator="," close=")">
    SELECT 
    		COUNT(*)
    FROM 
    		MEMBER
    WHERE 
    		MEMBER_TEL IN #{member.member_Tel}
    </foreach>
</select>

<select id="deleteMemberM_ck" resultType="String" parameterType="java.util.List">
    <foreach collection="list" item="member_Id" index="index" separator=" UNION ALL "> 
        SELECT 
        		COUNT(*)
        FROM 
        		MEMBER M
        JOIN
        		PROJECT_DETAIL P
        ON 
        		M.MEMBER_ID = P.MEMBER_ID
        WHERE
        		P.MEMBER_ID = #{member_Id} 
    </foreach>
</select> 

<delete id="memberDelete2" parameterType="map">
    DELETE FROM PROJECT_DETAIL
    WHERE (MEMBER_ID, PROJECT_ID) IN
    <foreach item="item" collection="selectedProjectData" open="(" separator="," close=")">
        (#{item.member_Id}, #{item.project_Id})
    </foreach>
</delete>
	<!-- 
		index="index" 
	<delete id="memberDelete2" parameterType="list">
		
		DELETE 
		FROM 
			PROJECT_DETAIL
		WHERE
		<foreach item="member_Id" collection="list" open="(" separator="," close=")">
		 
			MEMBER_ID = #{member_Id}
		</foreach>
		AND
		<foreach item="project_Id" collection="list" open="(" separator="," close=")">
			PROJECT_ID = #{project_Id}
		</foreach>
	</delete> -->
	
	<select id="getmemberId" resultType="com.jmh.dto.MemberDto">
		SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_ID=#{member_Id}
	</select>

	<insert id = "projectDetailInsert2" parameterType="com.jmh.dto.ProjectDetailDto">
		INSERT 
   			INTO 
        		PROJECT_DETAIL
                            (
                                 MEMBER_ID
                                ,MEMBER_NAME
                                ,PROJECT_ID
                                ,PROJECT_NAME
                                ,PUSHDATE
                                ,PULLDATE
                            )
        
		 VALUES
    		(
        		
        		#{member_Id},
        		#{member_Name},
        		#{project_Id},
        		#{project_Name},
        		#{pushDate},
        		#{pullDate}
    		)
	</insert>
	
<select id="getFilterd_search_mem_List" resultType="com.jmh.dto.MemberDto">
	/* getFilterd_search_mem_List */
	SELECT
		  MEMBER_ID
		  ,MEMBER_NAME 
		  ,CASE
            WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
          END AS MEMBER_SEX
          ,CASE
            WHEN MEMBER_POSITION = 'D028' THEN '사원'
            WHEN MEMBER_POSITION = 'D027' THEN '대리'
            WHEN MEMBER_POSITION = 'D026' THEN '과장'
            WHEN MEMBER_POSITION = 'D025' THEN '차장'
            WHEN MEMBER_POSITION = 'D024' THEN '부장'
            WHEN MEMBER_POSITION = 'D023' THEN '이사'
            WHEN MEMBER_POSITION = 'D022' THEN '상무'
            WHEN MEMBER_POSITION = 'D021' THEN '사장'
          END AS MEMBER_POSITION
          ,CASE
          	WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
            WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
            WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
            WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
          END AS MEMBER_DEPARTMENT
		  ,MEMBER_TEL
		  ,CASE
            WHEN MEMBER_SKILL_LANGUAGE = 'S010' THEN 'JAVA'
            WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
            WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
            WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
          END AS MEMBER_SKILL_LANGUAGE
          ,CASE
            WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
            WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
            WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
            WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
          END AS MEMBER_SKILL_DB
		  ,MEMBER_STARTDATE
		  ,CASE
            WHEN MEMBER_STATUS = 'S01' THEN '대기중'
            WHEN MEMBER_STATUS = 'S02' THEN '파견중'
            WHEN MEMBER_STATUS = 'S03' THEN '휴가중'
            WHEN MEMBER_STATUS = 'S04' THEN '퇴사'
            WHEN MEMBER_STATUS = 'null' THEN '대기중'
            WHEN MEMBER_STATUS = '' THEN '대기중'
          END AS MEMBER_STATUS
		  
		FROM 
		(
			SELECT
		  		MEMBER_NAME
		  		,MEMBER_SEX
		  		,MEMBER_POSITION
		  		,MEMBER_DEPARTMENT
		  		,MEMBER_TEL
		  		,MEMBER_SKILL_LANGUAGE
		  		,MEMBER_SKILL_DB
		  		,MEMBER_STARTDATE
		  		,MEMBER_STATUS
		      	,ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW
		      	,COUNT(*) OVER() AS TOTAL_CNT
			FROM
				MEMBER
		)
		WHERE 
			NUMROW BETWEEN #{cri.startNo} AND #{cri.endNo}
	</select>	
	
<select id="getFilterd_mem_List" resultType="com.jmh.dto.MemberDto">
/*getFilterd_mem_List*/
	SELECT
		  MEMBER_ID
		  ,MEMBER_NAME 
		  ,CASE
            WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
          END AS MEMBER_SEX
          ,CASE
            WHEN MEMBER_POSITION = 'D028' THEN '사원'
            WHEN MEMBER_POSITION = 'D027' THEN '대리'
            WHEN MEMBER_POSITION = 'D026' THEN '과장'
            WHEN MEMBER_POSITION = 'D025' THEN '차장'
            WHEN MEMBER_POSITION = 'D024' THEN '부장'
            WHEN MEMBER_POSITION = 'D023' THEN '이사'
            WHEN MEMBER_POSITION = 'D022' THEN '상무'
            WHEN MEMBER_POSITION = 'D021' THEN '사장'
          END AS MEMBER_POSITION
          ,CASE
          	WHEN MEMBER_DEPARTMENT = 'A020' THEN '경영지원부'
            WHEN MEMBER_DEPARTMENT = 'A021' THEN '인사부'
            WHEN MEMBER_DEPARTMENT = 'A022' THEN 'IT부'
            WHEN MEMBER_DEPARTMENT = 'A023' THEN '마케팅부'
          END AS MEMBER_DEPARTMENT
		  ,MEMBER_TEL
		  ,CASE
            WHEN MEMBER_SKILL_LANGUAGE = 'S010' THEN 'JAVA'
            WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
            WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
            WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
          END AS MEMBER_SKILL_LANGUAGE
          ,CASE
            WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
            WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
            WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
            WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
          END AS MEMBER_SKILL_DB
		  ,MEMBER_STARTDATE
		  ,CASE
            WHEN MEMBER_STATUS = 'S01' THEN '대기중'
            WHEN MEMBER_STATUS = 'S02' THEN '파견중'
            WHEN MEMBER_STATUS = 'S03' THEN '휴가중'
            WHEN MEMBER_STATUS = 'S04' THEN '퇴사'
            WHEN MEMBER_STATUS = 'null' THEN '대기중'
            WHEN MEMBER_STATUS = '' THEN '대기중'
          END AS MEMBER_STATUS
		FROM
		(
			SELECT
		      	MEMBER_ID
		  		,MEMBER_NAME
		  		,MEMBER_SEX
		  		,MEMBER_POSITION
		  		,MEMBER_DEPARTMENT
		  		,MEMBER_TEL
		  		,MEMBER_SKILL_LANGUAGE
		  		,MEMBER_SKILL_DB
		  		,MEMBER_STARTDATE
		  		,MEMBER_STATUS
		      	,ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW
		      	,COUNT(*) OVER() AS TOTAL_CNT
			FROM
				MEMBER
		)M
		WHERE NOT EXISTS(
			SELECT 1
			FROM
				PROJECT_DETAIL PD
			WHERE
				PD.MEMBER_ID = M.MEMBER_ID
			AND
				PD.PROJECT_ID = #{project_Id}
		)
		AND
			NUMROW BETWEEN #{cri.startNo} AND #{cri.endNo}
</select>

<select id="getMemberListt" resultType="com.jmh.dto.MemberDto"  resultMap="memberMap">
select * from member_Detail
</select>

<!-- <if test="pullDate != null">
            		#{pullDate}
        		</if>
        		<if test="pullDate == null">
					''
        		</if> -->
	
	<!-- 20/05/06 과 같이 값이 보일 뿐, 실제 값이 YY/MM/DD 로 저장된게 아닙니다.
뷰단에 원하는 포맷으로 출력을 원하시면

	 -->


<update id="projectDetailInsert" parameterType="java.util.Map">
    INSERT ALL
    <foreach item="item" index="index" collection="selectedRowData" separator=" ">
        INTO PROJECT_DETAIL (MEMBER_ID, MEMBER_NAME, PROJECT_ID, PROJECT_NAME)
        VALUES (#{item.member_Id}, #{item.member_Name}, #{item.project_Id}, #{item.project_Name})
    </foreach>
    SELECT * FROM DUAL
</update>
	
<sql id="criteria">
    <where>
        <if test="searchField == 'name'">
            AND MEMBER_NAME LIKE '%'||#{searchWord}||'%'
        </if>
        <if test="searchField == 'tel'">
            AND MEMBER_TEL LIKE '%'||#{searchWord}||'%'
        </if>
        <if test="searchStDay != null">
            AND MEMBER_STDAY = #{searchStDay}
        </if>
         <if test="searchLaDay != null">
            AND MEMBER_LADAY = #{searchLaDay}
        </if>
    </where>
</sql>

</mapper>  
